#!/bin/bash

function scriptDir
{
        SOURCE="${BASH_SOURCE[0]}"
        while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
                DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
                SOURCE="$(readlink "$SOURCE")"
                [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located      
        done
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        echo $DIR
}

function scriptHelp
{
	echo -e "Display information about lighttpd virtual host specified by -vhost"
	echo -e "Arguments:"
	echo -e "-vhost host"
	echo -e "fg: vhostinfo somehost.exampledomain.com"
}

sdir=`scriptDir`
source "${sdir}/../include/utils"
initArg $@
sizeArg || { scriptHelp; errorOut; }
hasArg h && { scriptHelp; errorOut; }
vhost=`valueArg "vhost"` || { scriptHelp; errorOut; }


lightConf=`getVariable "${sdir}/conf" "LIGHTTPD_CONF" "path" || errorOut`

checkDir "${lightConf}/host.d" &> /dev/null || errorOut "${lightConf}/host.d does not exist"

vhostEsc=`regexpEscape "${vhost}"`
if [ -z "$( ls -lAh "${lightConf}/host.d" | awk '{ if(NR!=1) { print } }' | awk 'BEGIN { FS=" " } ; { print $9 }' | grep -E -e "${vhostEsc}" )" ]; then
	errorOut "Specified virtual host:${vhost} does not exist"
fi

buffer=`cat "${lightConf}/host.d/${vhost}.conf"`
docRoot=`echo -e "${buffer}" | grep -E -e "(server\.document-root)" | awk 'BEGIN { FS=" " } ; { print $3 }' | grep -Eo -e "[A-Za-z0-9/\.]+"`
accessLog=`echo -e "${buffer}" | grep -E -e "(accesslog\.filename)" | awk 'BEGIN { FS=" " } ; { print $3 }' | grep -Eo -e "[A-Za-z0-9/\.]+"`
errorLog=`echo -e "${buffer}" | grep -E -e "(server\.errorlog)" | awk 'BEGIN { FS=" " } ; { print $3 }' | grep -Eo -e "[A-Za-z0-9/\.]+"`
interfaces=( $( ls -lAh "${lightConf}/listen.d/" | awk '{ if(NR!=1) { print } }' | awk 'BEGIN { FS=" "} ; { print $9 } ' ) )

hostEsc=`regexpEscape "${vhost}"`
for iface in ${interfaces}
do 	
	if [ "$( cat "${lightConf}/listen.d/${iface}" | grep -Eo -e "(include)[[:blank:]]+\"host\.d/${hostEsc}\.conf\"" )" ]; then
		tmp=`echo "${iface}" | sed "s#\.conf##g"`
		hostIfaces="${hostIfaces} ${tmp}"
	fi
done

echo -e "Host: ${vhost}"
echo -e "\tDocument Root:${docRoot}"
echo -e "\tAccess Log:${accessLog}"
echo -e "\tError Log:${errorLog}"
echo -e "\tInterfaces:${hostIfaces}"
