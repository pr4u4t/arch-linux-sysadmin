#!/bin/bash

function scriptDir
{    
        SOURCE="${BASH_SOURCE[0]}"
    
        while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
                DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
                SOURCE="$(readlink "$SOURCE")"
                [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
        done
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        echo $DIR
}

function scriptHelp
{
        echo -e "Create netctl profile file for bridge connection"
	echo -e "Arguments:"
	echo -e "-iface interface name"
	echo -e "-name profile name"
	echo -e "-address ip address of bridge only if ip yes ignored otherwise"
	echo -e "-netmask ip address network mask"
	echo -e "-bind list of interfaces to bind"
	echo -e "[-desc] description"
}

sdir=`scriptDir`

source "${sdir}/../include/utils"
initArg "${@}"
sizeArg || { scriptHelp; errorOut; }
hasArg "h" && { scriptHelp; errorout; }

iface=$( valueArg "iface") || errorOut
name=$( valueArg "name" ) || errorOut
desc=$( valueArg "desc")
address=$( valueArg "address" ) #|| errorOut 
netmask=$( valueArg "netmask" ) #|| errorOut
path=$( getVariable "${sdir}/conf" "NETCTL_PATH" "path" ) || errorOut
ifBind=$( valueArg "bind" )

${sdir}/profileInfo "-name ${name}" &> /dev/null && errorOut "Profile ${name} already exist"

copy "${sdir}/bridge.tpl" "${path}/${name}" || errorOut

setVariable "${path}/${name}" "DESCRIPTION" "$desc"
setVariable "${path}/${name}" "INTERFACE" "$iface"

if [[ ( ! -z "${address}" ) && ( ! -z "${netmask}" ) ]]; then

	appendFile "${path}/${name}" "IP=static"
	appendFile "${path}/${name}" "Address=('${address}/${netmask}')"
fi

if [ ! -z "${ifBind}" ]; then
	appendFile "${path}/${name}" "BindsToInterfaces=(${ifBind})"
fi
